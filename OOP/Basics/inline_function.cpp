// Inline Functions

/*
A function which is expanded inline by the compiler each time its call is appeared 
instead of jumping to the called function as usual is called inline function.

It is used to suggest to the compiler that the code generated by the function body 
is inserted at each point the function is called, instead of being inserted only once.
*/

// Example:
#include <iostream>
#include <conio.h>
using namespace std;
inline void sum(int a, int b)
{
    cout << "Sum= " << a + b;
}
int main()
{
    sum(10, 20);
    getch();
    return 0;
}
